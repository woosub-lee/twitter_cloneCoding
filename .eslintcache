[{"C:\\Users\\82109\\Desktop\\ctwitter\\src\\index.js":"1","C:\\Users\\82109\\Desktop\\ctwitter\\src\\myBase.js":"2","C:\\Users\\82109\\Desktop\\ctwitter\\src\\components\\App.js":"3","C:\\Users\\82109\\Desktop\\ctwitter\\src\\components\\Router.js":"4","C:\\Users\\82109\\Desktop\\ctwitter\\src\\routes\\Auth.js":"5","C:\\Users\\82109\\Desktop\\ctwitter\\src\\routes\\Home.js":"6","C:\\Users\\82109\\Desktop\\ctwitter\\src\\routes\\Profile.js":"7","C:\\Users\\82109\\Desktop\\ctwitter\\src\\components\\Navigation.js":"8","C:\\Users\\82109\\Desktop\\ctwitter\\src\\components\\Ctweet.js":"9","C:\\Users\\82109\\Desktop\\ctwitter\\src\\components\\CtweetWriter.js":"10","C:\\Users\\82109\\Desktop\\ctwitter\\src\\components\\AuthForm.js":"11"},{"size":231,"mtime":1608000062733,"results":"12","hashOfConfig":"13"},{"size":684,"mtime":1607872638040,"results":"14","hashOfConfig":"13"},{"size":978,"mtime":1607955161450,"results":"15","hashOfConfig":"13"},{"size":1552,"mtime":1608013264841,"results":"16","hashOfConfig":"13"},{"size":1516,"mtime":1608012475335,"results":"17","hashOfConfig":"13"},{"size":976,"mtime":1608000117167,"results":"18","hashOfConfig":"13"},{"size":1997,"mtime":1608013042238,"results":"19","hashOfConfig":"13"},{"size":1422,"mtime":1608012082022,"results":"20","hashOfConfig":"13"},{"size":3089,"mtime":1608013367553,"results":"21","hashOfConfig":"13"},{"size":3301,"mtime":1608013445705,"results":"22","hashOfConfig":"13"},{"size":2164,"mtime":1608012747011,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"13bnmcy",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\82109\\Desktop\\ctwitter\\src\\index.js",[],["50","51"],"C:\\Users\\82109\\Desktop\\ctwitter\\src\\myBase.js",[],"C:\\Users\\82109\\Desktop\\ctwitter\\src\\components\\App.js",[],"C:\\Users\\82109\\Desktop\\ctwitter\\src\\components\\Router.js",[],"C:\\Users\\82109\\Desktop\\ctwitter\\src\\routes\\Auth.js",[],"C:\\Users\\82109\\Desktop\\ctwitter\\src\\routes\\Home.js",[],"C:\\Users\\82109\\Desktop\\ctwitter\\src\\routes\\Profile.js",[],"C:\\Users\\82109\\Desktop\\ctwitter\\src\\components\\Navigation.js",[],"C:\\Users\\82109\\Desktop\\ctwitter\\src\\components\\Ctweet.js",["52"],"import { dbService, storageService } from \"myBase\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Ctweet = ({CtweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newCtweet, setNewCtweet] = useState(CtweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this?\");\r\n        if(ok){\r\n            await dbService.doc(`Ctweet/${CtweetObj.id}`).delete();\r\n            await storageService.refFromURL(CtweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`Ctweet/${CtweetObj.id}`).update({\r\n            text: newCtweet\r\n        })\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setNewCtweet(value);\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"ctweet\">\r\n            {editing ? (\r\n                <Fragment>\r\n                    {isOwner &&\r\n                        <Fragment>\r\n                            <form onSubmit={onSubmit} className=\"container ctweetEdit\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    placeholder=\"Edit your Ctweet\" \r\n                                    value={newCtweet} \r\n                                    required\r\n                                    autoFocus \r\n                                    onChange={onChange} \r\n                                    className=\"formInput\" />\r\n                                <input type=\"submit\" value=\"Update Ctweet\" className=\"formBtn\" />\r\n                            </form>\r\n                            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                                Cancel\r\n                            </span>\r\n                        </Fragment>\r\n                    }\r\n                </Fragment>\r\n            ):(\r\n                <Fragment>\r\n                    <h4>{CtweetObj.text}</h4>\r\n                    {CtweetObj.attachmentUrl && <img src={CtweetObj.attachmentUrl} />}\r\n                    {isOwner && ( \r\n                        <Fragment>\r\n                            <div className=\"ctweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        </Fragment>\r\n                    )}\r\n                </Fragment>\r\n            )}\r\n            \r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Ctweet;","C:\\Users\\82109\\Desktop\\ctwitter\\src\\components\\CtweetWriter.js",["53"],"import { dbService, storageService } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CtweetWriter = ({userObj}) => {\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [ctweet, setCtweet] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (ctweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`); \r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const CtweetObj = {\r\n            text: ctweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n        await dbService.collection(\"Ctweet\").add(CtweetObj);\r\n        setCtweet(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n    const onChange = (event) => {\r\n        const { target: {value}} = event;\r\n        setCtweet(value);\r\n    }\r\n    const onFileChange = (event) => {\r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget: {result}} = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => {\r\n        setAttachment(\"\");\r\n    }\r\n    return(\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"writerForm\">\r\n            <div className=\"writerInput__container\">\r\n                <input\r\n                    className=\"writerInput__input\"\r\n                    value={ctweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"writerInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"writerInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"writerForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"writerForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n        </>\r\n    );\r\n};\r\nexport default CtweetWriter;","C:\\Users\\82109\\Desktop\\ctwitter\\src\\components\\AuthForm.js",[],["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":55,"column":49,"nodeType":"62","endLine":55,"endColumn":86},{"ruleId":"60","severity":1,"message":"61","line":76,"column":21,"nodeType":"62","endLine":81,"endColumn":23},{"ruleId":"56","replacedBy":"63"},{"ruleId":"58","replacedBy":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["65"],["66"],"no-global-assign","no-unsafe-negation"]