{"version":3,"sources":["myBase.js","components/AuthForm.js","routes/Auth.js","components/Ctweet.js","components/CtweetWriter.js","components/GoogleSearcher.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Ctweet","CtweetObj","isOwner","editing","setEditing","text","newCtweet","setNewCtweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","displayName","src","open","faTrash","faPencilAlt","CtweetWriter","userObj","attachment","setAttachment","ctweet","setCtweet","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","GoogleSearcher","word","setWord","Home","ctweets","setCtweets","useEffect","orderBy","onSnapshot","snapshot","CtweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAcAA,IAASC,cATY,CACjBC,OAAQC,0CACRC,WAAYD,iCACZE,UAAWF,iBACXG,cAAeH,6BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKJ,IAAMM,EAAmBT,IACnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,UCwCxBC,EAxDE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEaF,mBAAS,IAFtB,mBAEZG,EAFY,KAEFC,EAFE,OAGiBJ,oBAAS,GAH1B,mBAGZK,EAHY,KAGAC,EAHA,OAION,mBAAS,IAJhB,mBAIZO,EAJY,KAILC,EAJK,KAKbC,EAAW,SAACC,GAAW,IAAD,EACQA,EAAzBC,OAASC,EADQ,EACRA,KAAMC,EADE,EACFA,MACV,UAATD,EACCV,EAASW,GACI,aAAPD,GACNR,EAAYS,IAGdC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACbL,EAAMM,iBADO,UAINX,EAJM,gCAKQZ,EAAYwB,+BAA+BhB,EAAOE,GAL1D,OAKLe,EALK,+CAOQzB,EAAY0B,2BAA2BlB,EAAOE,GAPtD,QAOLe,EAPK,eASTE,QAAQC,IAAIH,GATH,kDAWTV,EAAS,KAAMc,SAXN,0DAAH,sDAed,OACI,eAAC,WAAD,WACI,uBAAMR,SAAUA,EAAUS,UAAU,YAApC,UACI,uBACIX,KAAK,QACLY,KAAK,QACLC,YAAY,QACZC,SAAUzB,EACVQ,SAAUA,EACVc,UAAU,cAEd,uBACIX,KAAK,WACLY,KAAK,WACLC,YAAY,WACZC,SAAUvB,EACVM,SAAUA,EACVc,UAAU,cAEd,uBAAOC,KAAK,SAASD,UAAU,uBAAuBV,MAAOR,EAAa,iBAAmB,WAC5FE,GAAS,sBAAMgB,UAAU,YAAhB,SAA6BhB,OAE3C,wBAAQoB,QAvBM,kBAAMrB,GAAc,SAAAsB,GAAI,OAAKA,MAuBXL,UAAU,aAA1C,SACKlB,EAAa,SAAW,uB,gBCX1BwB,EAjCF,WACT,IAAMC,EAAa,uCAAI,WAAOpB,GAAP,mBAAAK,EAAA,4DAGP,YAFGH,EAASF,EAAjBC,OAAQC,MAGXmB,EAAW,IAAIvC,EAAiBE,KAAKsC,mBACvB,WAATpB,IACLmB,EAAW,IAAIvC,EAAiBE,KAAKuC,oBANtB,SAQAxC,EAAYyC,gBAAgBH,GAR5B,OAQbb,EARa,OASnBE,QAAQC,IAAIH,GATO,2CAAJ,sDAWnB,OACI,sBAAKK,UAAU,gBAAf,UACI,cAAC,IAAD,CACAY,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAEvB,cAAC,EAAD,IACA,sBAAKjB,UAAU,WAAf,UACI,yBAAQI,QAASG,EAAelB,KAAK,SAASW,UAAU,UAAxD,iCAEI,cAAC,IAAD,CAAiBY,KAAMM,SAE3B,yBAAQd,QAASG,EAAelB,KAAK,SAASW,UAAU,UAAxD,kCACyB,cAAC,IAAD,CAAiBY,KAAMO,gB,gBC0CjDC,EA1EA,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAAa,EACP7C,oBAAS,GADF,mBAC9B8C,EAD8B,KACrBC,EADqB,OAEH/C,mBAAS4C,EAAUI,MAFhB,mBAE9BC,EAF8B,KAEnBC,EAFmB,KAG/BC,EAAa,uCAAG,sBAAApC,EAAA,0DACPqC,OAAOC,QAAQ,yCADR,gCAGR1D,EAAU2D,IAAV,iBAAwBV,EAAUW,KAAMC,SAHhC,uBAIR3D,EAAe4D,WAAWb,EAAUc,eAAeF,SAJ3C,2CAAH,qDAObG,EAAgB,kBAAMZ,GAAW,SAACnB,GAAD,OAAWA,MAC5Cd,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAEPrB,EAAU2D,IAAV,iBAAwBV,EAAUW,KAAMK,OAAO,CACjDZ,KAAMC,IAHG,OAKbF,GAAW,GALE,2CAAH,sDAWd,OACI,mCACA,qBAAKxB,UAAU,SAAf,SACKuB,EACG,cAAC,WAAD,UACKD,GACG,eAAC,WAAD,WACI,uBAAM/B,SAAUA,EAAUS,UAAU,uBAApC,UACI,uBACIC,KAAK,OACLC,YAAY,mBACZZ,MAAOoC,EACPvB,UAAQ,EACRmC,WAAS,EACTpD,SAlBf,SAACC,GAAW,IACVG,EAAUH,EAAlBC,OAAQE,MACfqC,EAAarC,IAiBeU,UAAU,cACd,uBAAOC,KAAK,SAASX,MAAM,gBAAgBU,UAAU,eAEzD,sBAAMI,QAASgC,EAAepC,UAAU,oBAAxC,yBAOZ,eAAC,WAAD,WACI,6BAAKqB,EAAUI,OACf,+BAAKJ,EAAUkB,YAAf,qCACClB,EAAUc,eACP,qBACIK,IAAKnB,EAAUc,cACf/B,QAAS,kBAAMyB,OAAOY,KAAKpB,EAAUc,kBAC5Cb,GACG,cAAC,WAAD,UACI,sBAAKtB,UAAU,kBAAf,UACI,sBAAMI,QAASwB,EAAf,SACI,cAAC,IAAD,CAAiBhB,KAAM8B,QAE3B,sBAAMtC,QAASgC,EAAf,SACI,cAAC,IAAD,CAAiBxB,KAAM+B,qB,QC0B5CC,EAtFM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACIpE,mBAAS,IADb,mBACzBqE,EADyB,KACbC,EADa,OAEJtE,mBAAS,IAFL,mBAEzBuE,EAFyB,KAEjBC,EAFiB,KAG1B1D,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACE,KAAXwD,EADS,oDAIb7D,EAAMM,iBACF0C,EAAgB,GACF,KAAfW,EANU,wBAOHI,EAAgB5E,EAAe6E,MAAMC,MAArB,UAA8BP,EAAQQ,IAAtC,YAA6CC,gBAP1D,SAQcJ,EAAcK,UAAUT,EAAY,YARlD,cAQHU,EARG,iBASaA,EAASL,IAAIM,iBAT1B,QASTtB,EATS,sBAWPd,EAAY,CACdI,KAAMuB,EACNU,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnBd,YAAaM,EAAQN,YACrBJ,iBAhBS,UAkBP/D,EAAU0F,WAAW,UAAUC,IAAI1C,GAlB5B,QAmBb4B,EAAU,IACVF,EAAc,IApBD,4CAAH,sDAuCd,OACI,mCACA,uBAAMxD,SAAUA,EAAUS,UAAU,aAApC,UACI,sBAAKA,UAAU,yBAAf,UACI,uBACIA,UAAU,qBACVV,MAAO0D,EACP9D,SAxBC,SAACC,GAAW,IACRG,EAAUH,EAAnBC,OAASE,MACjB2D,EAAU3D,IAuBEW,KAAK,OACLC,YAAY,uBACZ8D,UAAW,MAEf,uBAAO/D,KAAK,SAASX,MAAM,SAASU,UAAU,0BAElD,wBAAOiE,QAAQ,cAAcjE,UAAU,qBAAvC,UACI,8CACA,cAAC,IAAD,CAAiBY,KAAMsD,SAE3B,uBAAOlC,GAAG,cACN/B,KAAK,OACLkE,OAAO,UACPjF,SAlCS,SAACC,GAAW,IAEvBiF,EADmBjF,EAAlBC,OAAQiF,MACO,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IACZC,EAAWD,EAA3BE,cAAgBD,OACvB3B,EAAc2B,IAElBJ,EAAOM,cAAcR,IA2BbpD,MAAO,CACH6D,QAAS,KAGhB/B,GACG,sBAAK9C,UAAU,yBAAf,UACI,qBACIwC,IAAKM,EACL9B,MAAO,CACH8D,gBAAiBhC,KAGzB,sBAAK9C,UAAU,oBAAoBI,QArCzB,WACtB2C,EAAc,KAoCF,UACI,0CACA,cAAC,IAAD,CAAiBnC,KAAMmE,kBCrDhCC,EA7BQ,WAAO,IAAD,EACDvG,mBAAS,IADR,mBAClBwG,EADkB,KACZC,EADY,KAMnB3F,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACA,KAATyF,EADS,iDAIb9F,EAAMM,iBACNoC,OAAOY,KAAP,uIAA4IwC,EAA5I,sNAAqW,SALxV,2CAAH,sDAOd,OACI,sBAAM1F,SAAUA,EAAUS,UAAU,aAApC,SACI,sBAAKA,UAAU,yBAAf,UACI,uBACIA,UAAU,qBACVV,MAAO2F,EACP/F,SAjBC,SAACC,GAAW,IACRG,EAAUH,EAAnBC,OAASE,MACjB4F,EAAQ5F,IAgBIW,KAAK,OACLC,YAAY,gBACZ8D,UAAW,MAEf,uBAAO/D,KAAK,SAASX,MAAM,SAASU,UAAU,6BC2B/CmF,EA/CF,SAAC,GAAe,IAAdtC,EAAa,EAAbA,QAAa,EACMpE,mBAAS,IADf,mBACjB2G,EADiB,KACRC,EADQ,KAExBC,qBAAU,WACNlH,EAAU0F,WAAW,UAAUyB,QAAQ,YAAY,OAAOC,YAAW,SAACC,GAClE,IAAMC,EAAcD,EAASE,KAAKC,KAAI,SAAA7D,GAAG,oBACrCC,GAAID,EAAIC,IACLD,EAAIpC,WAEX0F,EAAWK,QAEjB,IAaF,OACI,sBAAK1F,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAc6C,QAASA,IACvB,sBAAMzC,QAhBS,WACnByB,OAAOY,KAAP,sBAAkC,UAeCzC,UAAU,kBAAzC,2BAGA,sBAAMI,QAhBQ,WAClByB,OAAOY,KAAP,sBAAkC,UAeAzC,UAAU,oBAAxC,0BAGA,sBAAMI,QAhBW,WACrByB,OAAOY,KAAP,gCAA4C,UAePzC,UAAU,WAA3C,6BAGA,sBAAMI,QAhBQ,WAClByB,OAAOY,KAAP,sBAAkC,UAeAzC,UAAU,oBAAxC,0BAGA,qBAAKgB,MAAO,CAAE6E,UAAW,IAAzB,SACKT,EAAQQ,KAAI,SAAC5C,GAAD,OACT,cAAC,EAAD,CAAwB3B,UAAW2B,EAAQ1B,QAAS0B,EAAOa,YAAchB,EAAQQ,KAApEL,EAAOhB,aCVzB8D,EA/BI,SAAC,GAAD,IAAEjD,EAAF,EAAEA,QAAF,OACf,8BACI,qBAAI7B,MAAO,CAAE+E,QAAS,OAAQC,eAAgB,SAAUH,UAAW,IAAnE,UACI,6BACI,cAAC,IAAD,CAAMI,GAAG,IAAIjF,MAAO,CAAEkF,YAAa,IAAnC,SACI,cAAC,IAAD,CAAiBtF,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAGjE,6BACI,eAAC,IAAD,CACIkF,GAAG,WACHjF,MAAO,CACHmF,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,IAPlB,UAUI,cAAC,IAAD,CAAiB1F,KAAM2F,IAAQzF,MAAO,UAAWC,KAAK,OACtD,sBAAMC,MAAO,CAAE6E,UAAW,IAA1B,SACKhD,EAAQN,YAAR,UACQM,EAAQN,YADhB,kBAEK,uBCiCfiE,EA1DC,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,YAAa5D,EAAa,EAAbA,QACrB6D,EAAUC,cADwB,EAEIlI,mBAASoE,EAAQN,aAFrB,mBAEjCqE,EAFiC,KAEjBC,EAFiB,KAkBlCtH,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBACFoD,EAAQN,cAAgBqE,EAFf,gCAGH/D,EAAQiE,cAAc,CACxBvE,YAAaqE,IAJR,OAMTH,IANS,2CAAH,sDAYd,OACI,mCACA,sBAAKzG,UAAU,YAAf,UACI,uBAAMT,SAAUA,EAAUS,UAAU,cAApC,UACI,uBACIC,KAAK,OACLC,YAAY,eACZZ,MAAOsH,EACP1H,SAxBC,SAACC,GAAW,IACVG,EAAUH,EAAlBC,OAAQE,MACfuH,EAAkBvH,IAuBNgD,WAAS,EACTtC,UAAU,cAEd,uBACIC,KAAK,SACLX,MAAM,iBACNU,UAAU,UACVgB,MAAO,CACH6E,UAAW,SAIvB,sBAAM7F,UAAU,2BAA2BI,QAhD7B,WAClBlC,EAAY6I,UACZL,EAAQM,KAAK,MA8CT,2BCZGC,EApCE,SAAC,GAAwC,IAAvCR,EAAsC,EAAtCA,YAAaS,EAAyB,EAAzBA,WAAYrE,EAAa,EAAbA,QACxC,OACI,eAAC,IAAD,WACKqE,GAAc,cAAC,EAAD,CAAYrE,QAASA,IACpC,cAAC,IAAD,UACI,mCACCqE,EACG,sBACIlG,MAAO,CACHmG,SAAU,IACVC,MAAO,OACPC,OAAQ,SACRxB,UAAW,GACXE,QAAS,OACTC,eAAgB,UAPxB,UAUI,cAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAM1E,QAASA,MAEnB,cAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,EAAD,CAAS1E,QAASA,EAAS4D,YAAaA,SAIhD,cAAC,WAAD,UACI,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,gBCEbC,MAjCf,WAAgB,IAAD,EACW/I,oBAAS,GADpB,mBACNgJ,EADM,KACAC,EADA,OAEiBjJ,mBAAS,MAF1B,mBAENoE,EAFM,KAEG8E,EAFH,KAyBb,OAtBArC,qBAAU,WACRpH,EAAY0J,oBAAmB,SAACC,GAE5BF,EADCE,EACU,CACTtF,YAAasF,EAAKtF,YAClBc,IAAKwE,EAAKxE,IACVyD,cAAe,SAACgB,GAAD,OAAUD,EAAKf,cAAcgB,KAGnC,MAEbJ,GAAQ,QAEV,IAUE,mCACGD,EAAO,cAAC,EAAD,CAAWhB,YAVL,WAClB,IAAMoB,EAAO3J,EAAY6J,YACzBJ,EAAW,CACTpF,YAAasF,EAAKtF,YAClBc,IAAKwE,EAAKxE,IACVyD,cAAe,SAACgB,GAAD,OAAUD,EAAKf,cAAcgB,OAKGZ,WAAYc,QAAQnF,GAAUA,QAASA,IAAc,wB,MCzB1GoF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2b3bb742.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\nvar firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"myBase\";\r\nimport React, { Fragment, useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value)\r\n        } else if(name===\"password\"){\r\n            setPassword(value);\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let data;\r\n        try{\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            }else{\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        }catch (error){\r\n            setError(error.message);\r\n        }\r\n    }\r\n    const toggleAccount = () => setNewAccount(prev => !prev);\r\n    return(\r\n        <Fragment>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input \r\n                    name=\"email\"\r\n                    type=\"email\" \r\n                    placeholder=\"Email\" \r\n                    required={email} \r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input \r\n                    name=\"password\"\r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    required={password} \r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <button onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Log In\" : \"Create Account\"}\r\n            </button>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default AuthForm;","import AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'myBase';\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick =  async (event) => {\r\n        const {target:{name}} = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    }\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n            icon={faTwitter}\r\n            color={\"#04AAFF\"}\r\n            size=\"3x\"\r\n            style={{ marginBottom: 30 }}\r\n        />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google \r\n                    <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Auth;","import { dbService, storageService } from \"myBase\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Ctweet = ({CtweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newCtweet, setNewCtweet] = useState(CtweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this?\");\r\n        if(ok){\r\n            await dbService.doc(`Ctweet/${CtweetObj.id}`).delete();\r\n            await storageService.refFromURL(CtweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`Ctweet/${CtweetObj.id}`).update({\r\n            text: newCtweet\r\n        })\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setNewCtweet(value);\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"ctweet\">\r\n            {editing ? (\r\n                <Fragment>\r\n                    {isOwner &&\r\n                        <Fragment>\r\n                            <form onSubmit={onSubmit} className=\"container ctweetEdit\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    placeholder=\"Edit your Ctweet\" \r\n                                    value={newCtweet} \r\n                                    required\r\n                                    autoFocus \r\n                                    onChange={onChange} \r\n                                    className=\"formInput\" />\r\n                                <input type=\"submit\" value=\"Update Ctweet\" className=\"formBtn\" />\r\n                            </form>\r\n                            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                                Cancel\r\n                            </span>\r\n                        </Fragment>\r\n                    }\r\n                </Fragment>\r\n            ):(\r\n                <Fragment>\r\n                    <h4>{CtweetObj.text}</h4>\r\n                    <h6>{CtweetObj.displayName}님이 작성함</h6>\r\n                    {CtweetObj.attachmentUrl && \r\n                        <img \r\n                            src={CtweetObj.attachmentUrl} \r\n                            onClick={() => window.open(CtweetObj.attachmentUrl)} />}\r\n                    {isOwner && ( \r\n                        <Fragment>\r\n                            <div className=\"ctweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        </Fragment>\r\n                    )}\r\n                </Fragment>\r\n            )}\r\n            \r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Ctweet;","import { dbService, storageService } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CtweetWriter = ({userObj}) => {\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [ctweet, setCtweet] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (ctweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`); \r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const CtweetObj = {\r\n            text: ctweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            displayName: userObj.displayName,\r\n            attachmentUrl\r\n        };\r\n        await dbService.collection(\"Ctweet\").add(CtweetObj);\r\n        setCtweet(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n    const onChange = (event) => {\r\n        const { target: {value}} = event;\r\n        setCtweet(value);\r\n    }\r\n    const onFileChange = (event) => {\r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget: {result}} = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => {\r\n        setAttachment(\"\");\r\n    }\r\n    return(\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"writerForm\">\r\n            <div className=\"writerInput__container\">\r\n                <input\r\n                    className=\"writerInput__input\"\r\n                    value={ctweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"writerInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"writerInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"writerForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"writerForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n        </>\r\n    );\r\n};\r\nexport default CtweetWriter;","import React, { useState } from \"react\";\r\n\r\nconst GoogleSearcher = () => {\r\n    const [word, setWord] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const { target: {value}} = event;\r\n        setWord(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        if (word === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        window.open(`https://www.google.com/search?sxsrf=ALeKk00bq1tLl1sofG2ENnxw8iOT2eln0Q%3A1608644757501&source=hp&ei=lfjhX7_kG8Xh-Ab6u4TYCg&q=${word}&gs_lcp=CgZwc3ktYWIQAxgAMgcIIxDqAhAnMgcIIxDqAhAnMgcIIxDqAhAnMgcIIxDqAhAnMgcIIxDqAhAnMgcIIxDqAhAnMgcIIxDqAhAnMgcIIxDqAhAnMgcIIxDqAhAnMgcIIxDqAhAnUABYAGDnE2gBcAB4AIABAIgBAJIBAJgBAKoBB2d3cy13aXqwAQo&sclient=psy-ab`,\"_self\");\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"writerForm\">\r\n            <div className=\"writerInput__container\">\r\n                <input\r\n                    className=\"writerInput__input\"\r\n                    value={word}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Google Search\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"writerInput__arrow\" />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\nexport default GoogleSearcher;","import Ctweet from 'components/Ctweet';\r\nimport { dbService } from 'myBase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CtweetWriter from 'components/CtweetWriter';\r\nimport GoogleSearcher from 'components/GoogleSearcher';\r\n\r\nconst Home = ({userObj}) => {\r\n    const [ctweets, setCtweets] = useState([]);\r\n    useEffect(() => {\r\n        dbService.collection(\"Ctweet\").orderBy(\"createdAt\",\"asc\").onSnapshot((snapshot) => {\r\n            const CtweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setCtweets(CtweetArray);\r\n        })\r\n    },[]);\r\n    const onYoutubeClick = () => {\r\n        window.open(`https://youtube.com`,\"_self\");\r\n    }\r\n    const onGoogleClick = () => {\r\n        window.open(`https://google.com/`,\"_self\");\r\n    }\r\n    const onClassroomClick = () => {\r\n        window.open(`https://classroom.google.com/`,\"_self\");\r\n    }\r\n    const onGithubClick = () => {\r\n        window.open(`https://github.com/`,\"_self\");\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <GoogleSearcher />\r\n            <CtweetWriter userObj={userObj}/>\r\n            <span onClick={onYoutubeClick} className=\"ClickBtn RedBtn\">\r\n                Go To Youtube\r\n            </span>\r\n            <span onClick={onGoogleClick} className=\"ClickBtn GreenBtn\">\r\n                Go To Google\r\n            </span>\r\n            <span onClick={onClassroomClick} className=\"ClickBtn\">\r\n                Go To ClassRoom\r\n            </span>\r\n            <span onClick={onGithubClick} className=\"ClickBtn WhiteBtn\">\r\n                Go To Github\r\n            </span>\r\n            <div style={{ marginTop: 30 }}>\r\n                {ctweets.map((ctweet) => (\r\n                    <Ctweet key={ctweet.id} CtweetObj={ctweet} isOwner={ctweet.creatorId === userObj.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) =>(    \r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                            ? `${userObj.displayName}의 Profile`\r\n                            : \"Profile\"\r\n                        }\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\nexport default Navigation;","import { authService } from 'myBase';\r\nimport React, { Fragment, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    /*const getMyCtweets = async () => {\r\n        const ctweets = await dbService\r\n            .collection(\"Ctweet\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\",\"desc\")\r\n            .get();\r\n    };*/\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n    /*useEffect(() => {\r\n        getMyCtweets();\r\n    },[]);*/\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Display name\" \r\n                    value={newDisplayName} \r\n                    onChange={onChange} \r\n                    autoFocus \r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\nexport default Profile;","import React, { Fragment} from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter= ({refreshUser, isLoggedIn, userObj}) => {\r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                <>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <Fragment>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </Fragment>\r\n                )}\r\n                </>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\nexport default AppRouter;","import React, {useEffect, useState} from 'react';\nimport AppRouter from 'components/Router';\nimport {authService} from \"myBase\";\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n      }else{\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  },[]);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n  };\n  return (\n      <>\n        {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing......\"} \n        \n      </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}